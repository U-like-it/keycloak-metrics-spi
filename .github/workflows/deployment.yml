name: keycloak-pipeline
on:
    push:
        branches:
            - production
jobs:
    release-authorization:
        runs-on: ubuntu-latest
        steps:
            -   run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
            -   name: Checkout repository
                uses: actions/checkout@v2

            -   name: Read version.yaml
                id: version
                uses: juliangruber/read-file-action@v1
                with:
                    path: ./version.yaml

            -   name: Create databases
                uses: ianbelcher/eks-kubectl-action@master
                with:
                    aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                    aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                    aws_region: ${{ secrets.AWS_REGION }}
                    cluster_name: ulikeit-kubernetes
                    args: get pods

            -   name: Print image
                run:
                    echo ${{ steps.create-databases.outputs.result }}
            #            - name: Configure AWS credentials
            #              uses: aws-actions/configure-aws-credentials@v1
            #              with:
            #                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            #                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            #                aws-region: ${{ secrets.AWS_REGION }}
            #
            #            - name: Login to Amazon ECR
            #              id: login-ecr
            #              uses: aws-actions/amazon-ecr-login@v1
            #
            #            - name: Build, tag, and push image to Amazon ECR
            #              env:
            #                ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            #                ECR_REPOSITORY: ulikeit-keycloak-metrics-spi
            #                IMAGE_TAG: ${{ steps.version.outputs.content }}
            #              run: |
            #                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg app_version="${{ steps.version.outputs.content }}" --build-arg auth_token="${{ secrets.REPO_TOKEN }}" .
            #                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG




            -   run: echo "ðŸŽ‰ The keycloak deployment is finished."
